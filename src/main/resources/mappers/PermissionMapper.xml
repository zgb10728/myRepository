<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.crm.dao.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Permission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="acl_value" property="aclValue" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, module_id, acl_value, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_permission
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--根据角色id查询角色存在原始权限的个数-->
  <select id="countPermissionByRoleId" resultType="java.lang.Integer">
        select count(*) from t_permission where role_id = #{roleId}
  </select>

  <!--根据角色id 查询角色拥有的菜单id -->
    <select id="queryRoleHasAllModuleIdsByRoleId" parameterType="int" resultType="java.lang.Integer">
        select module_id from t_permission where role_id = #{roleId}
    </select>

  <!--根据用户id查询用户拥有的权限-->
  <select id="queryUserHasRolesHasPermissions" parameterType="int" resultType="java.lang.Integer">
        select distinct tp.acl_value
        from t_user_role ur left join t_permission tp on ur.role_id = tp.role_id
        where ur.user_id = #{userId}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deletePermissionsByRoleId" parameterType="int">
    delete from t_permission where role_id = #{roleId}
  </delete>

  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Permission" >
    insert into t_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="aclValue != null" >
        acl_value,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null" >
        #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Permission" >
    update t_permission
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null" >
        acl_value = #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--批量插入角色权限-->
  <insert id="insertBatch">
    insert into t_permission (role_id, module_id, acl_value, create_date, update_date)
    values 
    <foreach collection="list" item="plist" separator=",">
      (
       #{plist.roleId},
       #{plist.moduleId},
       #{plist.aclValue},
       #{plist.createDate},
       #{plist.updateDate}
       )
    </foreach>
  </insert>
</mapper>